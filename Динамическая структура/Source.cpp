#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;

struct Data //Инициализируем структуру с данными
{
	char surname[21]; //Фамилия
	char name[16]; //Имя
	int year[3]; //Дата рождения
	long long number; //Номер телефона
};

struct NOTE //Инициализируем управляющую структуру
{
	Data data;
	NOTE* next; //Указатель на следующий элемент
};

NOTE* first();
void add(NOTE** pend);
void insert(NOTE** pbegin, NOTE** pend);
void print(NOTE* begin);
void find(NOTE* begin);

int main()
{
	system("chcp 1251"); //Меняем кодовую страницу консоли для отображения русской раскладки
	system("cls"); //Очищаем окно консоли

	NOTE* pbegin = first(); //Задаём начальный указатель на первый элемент
	NOTE* pend = pbegin; //Задаём конечный указатель на тот же элемент (т.к. он пока что один)

	char answer;

	while (true) //Запрашиваем добавление нового сотрудника
	{
		cout << "\n-> Добавить нового сотрудника? (y/n): ";
		cin >> answer;
		switch (answer)
		{
		case 'y':
			insert(&pbegin, &pend); //Вставка нового элемента структуры
			break;
		case 'n':
			goto Break; //Выход из цикла добавления сотрудников
		default:
			break;
		}
	}
	
Break:
	print(pbegin); //Вывод всех сотрудников на экран
	find(pbegin); //Поиск сотрудника в списке

	system("pause"); //Придержка окна консоли до нажатия любой клавиши
	return 0;
}

NOTE* first() //Добавление первого элемента структуры
{
	NOTE* first = new NOTE; //Создаём указатель для прохода по структуре

	cout << "\nВведите фамилию: ";
	cin >> first->data.surname;

	cout << "\nВведите имя: ";
	cin >> first->data.name;

	cout << "\nВведите дату рождения (ДД ММ ГГГГ): ";
	for (int j = 0; j < 3; j++)
		cin >> first->data.year[j];

	cout << "\nВведите номер телефона (начиная с цифры 8): ";
	cin >> first->data.number;

	first->next = NULL; //Добавляем в конец пустой элемент

	return first; //Возвращаем адрес указателя
}

void add(NOTE** pend) //Добавление элемента в конец структуры (!!!Не используется в главной программе,
{					  //т.к. есть более универсальная функция вставки элемента в любое место структуры!!!)
	NOTE* add = *pend; //Создаём указатель для прохода по структуре

	add->next = new NOTE; //Создаём новый элемент на месте пустого
	add = add->next; //Перемещаем указатель на созданный элемент

	cout << "\nВведите фамилию: ";
	cin >> add->data.surname;

	cout << "\nВведите имя: ";
	cin >> add->data.name;

	cout << "\nВведите дату рождения (ДД ММ ГГГГ): ";
	for (int j = 0; j < 3; j++)
		cin >> add->data.year[j];

	cout << "\nВведите номер телефона (начиная с цифры 8): ";
	cin >> add->data.number;

	add->next = NULL; //Добавляем в конец пустой элемент
	*pend = add; //Перемещаем конечный указатель на созданный элемент
}

void insert(NOTE** pbegin, NOTE** pend) //Вставка нового элемента в любое место структуры
{
	NOTE* ins = new NOTE; //Создаём указатель для прохода по структуре
	
	cout << "\nВведите фамилию: ";
	cin >> ins->data.surname;

	cout << "\nВведите имя: ";
	cin >> ins->data.name;

	cout << "\nВведите дату рождения (ДД ММ ГГГГ): ";
	for (int j = 0; j < 3; j++)
		cin >> ins->data.year[j];

	cout << "\nВведите номер телефона (начиная с цифры 8): ";
	cin >> ins->data.number;

	NOTE* t = *pbegin; //Создаём указатель на начало места вставки

	/*Если первые три цифры телефона вставляемого сотрудника меньше, чем у первого сотрудника,
	то вставляем созданный элемент в начало структуры*/
	if ((t->data.number / 100000000) > (ins->data.number / 100000000)) 
	{
		ins->next = t; //Перемещаем начальный элемент на следующую позицию
		*pbegin = ins; //Премещаем начальный указатель на вставленный элемент
		return; //Выходим из функции
	}

	NOTE* t1 = t->next; //Создаём указатель на конец места вставки

	while (t1) //Ищем место вставки среди элементов структуры
	{
		/*Если первые три цифры телефона вставляемого сотрудника больше, чем у предыдущего сотрудника,
		но меньше, чем у следующего сотрудника, то вставляем созданный элемент между этими двумя*/
		if ((t->data.number / 100000000) < (ins->data.number / 100000000) && (ins->data.number / 100000000) <= (t1->data.number / 100000000))
		{
			t->next = ins; //Вставляем созданный элемент следом за предыдущим сотрудником
			ins->next = t1; //Перемещаем следующего за созданным сотрудника на следующее место
			return; //Выходим из функции
		}

		t = t1; //Сдвигаем указатель начала на следующий за ним элемент
		t1 = t1->next; //Сдвигаем указатель конца на следующий за ним элемент
	}

	t->next = ins; //Если не нашли место для вставки, то добавляем элемент в конец структуры
	ins->next = NULL; //Добавляем в конец пустой элемент
	*pend = ins; //Перемещаем конечный указатель на созданный элемент
}

void print(NOTE* begin) //Вывод всех элементов структуры на экран
{
	NOTE* prt = begin; //Создаём указатель для прохода по структуре

	while (prt) //Выводим элементы, пока они не закончились
	{
		cout << "\nФамилия: " << prt->data.surname;
		cout << "\nИмя: " << prt->data.name;
		cout << "\nДата рождения: ";
		for (int i = 0; i < 3; i++)
			cout << prt->data.year[i] << ".";
		cout << "\n" << "Номер телефона: " << prt->data.number << endl;
		prt = prt->next; //Сдвигаемся на следующий элемент
	}
}

void find(NOTE* begin) //Поиск заданного элемента в структуре
{
	NOTE* fnd = begin; //Создаём переменную для прохода по структуре

	char find_surname[21];

	cout << "\n-> Введите фамилию искомого сотрудника: ";
	cin >> find_surname;
	while (fnd) //Ищем сотрудника
	{
		/*Посимвольно сравниваем фамилию искомого сотрудника
		с фамилиями сотрудников в списке данных структуры*/
		if (strcmp(find_surname, fnd->data.surname) == 0)
		{
			cout << "\nФамилия: " << fnd->data.surname;
			cout << "\nИмя: " << fnd->data.name;
			cout << "\nДата рождения: ";
			for (int i = 0; i < 3; i++)
				cout << fnd->data.year[i] << ".";
			cout << "\n" << "Номер телефона: " << fnd->data.number << endl;
			return; //Выходим из функции
		}

		fnd = fnd->next; //Сдвигаемся на следующий элемент
	}

	cout << "\nИскомый сотрудник не найден!" << endl;
	return; //Выходим из функции
}